<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lost_found.dao.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.lost_found.pojo.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="post_id" property="postId" jdbcType="INTEGER" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, post_id, reply_id, `type`, info, is_read, create_time, update_time
  </sql>
  <update id="updateDisreadMessage" parameterType="Integer" >
    UPDATE reply SET is_read = 1 WHERE id IN(
      SELECT reply.id FROM (
        SELECT id FROM reply WHERE reply_id IN(
        SELECT id FROM reply WHERE user_id = #{userId}
        )
        AND is_read = 0
        AND TYPE = 1

        UNION

        SELECT id FROM reply WHERE post_id IN(
        SELECT id FROM post WHERE user_id = #{userId}
        )
        AND is_read = 0
        AND TYPE = 0
      ) reply
    )
  </update>
  <select id="selectDisReadMessageCount" resultType="Integer" parameterType="java.lang.Integer">
    SELECT
      (SELECT COUNT(*) FROM reply WHERE reply_id IN(
      SELECT id FROM reply WHERE user_id = #{userId}
      )
      AND is_read = 0
      AND TYPE = 1) +
      (SELECT COUNT(*) FROM reply WHERE post_id IN(
      SELECT id FROM post WHERE user_id = #{userId}
      )
      AND is_read = 0
    AND TYPE = 0) AS counts;
    </select>
  <select id="getAllReply" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        *
        from reply
        where post_id = #{postId}
        ORDER BY update_time ASC
    </select>
  <select id="getReplyNumber" resultType="Integer" parameterType="java.lang.Integer">
        select
        COUNT(*)
        from reply
        where post_id = #{postId}
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectUserMessage" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
     select
    r2.*
    from reply r1,reply r2,post
    where  post.id = r2.post_id and ((r1.user_id = #{userId,jdbcType=INTEGER} and
    r2.reply_id = r1.id) or (post.user_id= #{userId,jdbcType=INTEGER} and r2.reply_id is NULL and r2.id =r1.id  ))
	order by create_time DESC
  </select>
  <select id="queryByUserId" resultMap="BaseResultMap"  parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from reply
    where user_id = #{userId,jdbcType=INTEGER}
    order by create_time DESC
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lost_found.pojo.Reply" keyProperty="id" useGeneratedKeys="true">
    insert into reply (id, user_id, post_id, 
      reply_id, `type`, info, is_read,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{postId,jdbcType=INTEGER}, 
      #{replyId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{info,jdbcType=VARCHAR}, 
      #{isRead, jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lost_found.pojo.Reply" keyProperty="id" useGeneratedKeys="true">
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="postId != null" >
        post_id,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lost_found.pojo.Reply" >
    update reply
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead, jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lost_found.pojo.Reply" >
    update reply
    set user_id = #{userId,jdbcType=INTEGER},
      post_id = #{postId,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      is_read = #{isRead, jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>